services:
  web:
    build: .
    command: >
      sh -c "./entrypoint.sh"
    restart: always
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ssl_volume:/usr/src/app/ssl
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine3.19
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 1s
      timeout: 5s
      retries: 20

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ssl_volume:/usr/src/app/ssl
    depends_on:
      - web

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  postgres_data:
  static_volume:
  media_volume:
  ssl_volume:
