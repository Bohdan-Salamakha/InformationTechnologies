services:
  web:
    build: .
    command: >
      sh -c "./entrypoint.sh"
    restart: always
    volumes:
      # DEVELOPMENT BIND MOUNT OPTIONS FOR APPS
      - ./information_technologies:/usr/src/app/information_technologies
      - ./lab1:/usr/src/app/lab1
      - ./non_rel_db:/usr/src/app/non_rel_db

      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ./ssl:/usr/src/app/ssl
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
    depends_on:
      postgres:
        condition: service_healthy
#      mongo:
#        condition: service_started
#      redis:
#        condition: service_started

  postgres:
    image: postgres:15-alpine3.19
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 1s
      timeout: 5s
      retries: 20

#  mongo:
#    image: mongo:7.0.9
#    restart: always
#    env_file: .env
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
#      MONGO_INITDB_DATABASE: ${MONGO_NAME}
#    ports:
#      - 27018:27017
#    volumes:
#      - mongo_data:/data/db
#
#  mongo-express:
#    image: mongo-express:1.0.2-20-alpine3.19
#    restart: always
#    depends_on:
#      mongo:
#        condition: service_started
#    env_file:
#      - .env
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
#      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
#      ME_CONFIG_MONGODB_SERVER: mongo
#      ME_CONFIG_MONGODB_PORT: 27017
#      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
#      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
#      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
#    expose:
#      - 8081
#
#  redis:
#    image: redis:7.2.4-alpine3.19
#    restart: always
#    command: redis-server --appendonly yes --appendfsync always --dir /data
#    volumes:
#      - redis_data:/data
#    ports:
#      - 6380:6379
#
#  redisinsight:
#    image: redis/redisinsight:2.48.0
#    volumes:
#      - redisinsight_data:/db
#    restart: always
#    depends_on:
#      redis:
#        condition: service_started
#    expose:
#      - 5540

  nginx:
    build: ./nginx
    restart: always
    env_file:
      - .env
    ports:
      - 443:443
      - 8070:8070
#      - 5540:5540
#      - 8081:8081
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ./ssl:/usr/src/app/ssl:ro
    depends_on:
      web:
        condition: service_started

  adminer:
    image: adminer
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 8070

volumes:
  postgres_data:
  static_volume:
  media_volume:
#  mongo_data:
#  redis_data:
#  redisinsight_data:
